<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAMAAAC3Ycb+AAAABGdBTUEAALGPC/xhBQAAAwBQTFRFAYEB
        AIUAAIYAAIgAAIoAAIwAAI4AAJEAAJIAAJQAAJYAAZcBAJgAApgCAJ0AA5wDA54DBJoEBp0GBZ8FAKEA
        AKMAAKYAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3rK0HgAAAAlwSFlzAAAO
        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
</value>
  </data>
</root>